name: CI/CD Deployment

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-backend:
    runs-on: self-hosted
    if: "!contains(github.ref, '-DATABASE')"  # Csak akkor fut, ha a címke nem tartalmazza a '-DATABASE' szót
    steps:
      - name: Repository klónozása
        uses: actions/checkout@v3

      - name: Tag kinyerése
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Backend Docker image építése
        run: docker build -t laxus0212/fridge-management-backend:${{ env.TAG_NAME }} .
        env:
          DOCKER_BUILDKIT: 1

      - name: Backend Docker image push
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin docker.io
          docker push laxus0212/fridge-management-backend:${{ env.TAG_NAME }}

  deploy_backend_dev:
    runs-on: self-hosted
    needs: build-backend
    if: contains(github.ref, '-DEV')
    steps:
      - name: Konténer újraindítása a NAS-on fejlesztői környezetben
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: varadinas
          username: github-user
          key: ${{ secrets.NAS_SSH_KEY }}
          script: |
            docker pull laxus0212/fridge-management-backend:${{ env.TAG_NAME }}
            echo \"IMAGE_VERSION=${{ env.TAG_NAME }}\" > /volume1/docker/fridge-management-backend/.env
            docker-compose -f /volume1/docker/fridge-management-backend/docker-compose.dev.yml up -d
          

  deploy_backend_prod:
    runs-on: self-hosted
    needs: build-backend
    if: "!contains(github.ref, '-DEV') && !contains(github.ref, '-DATABASE')"
    steps:
      - name: Konténer újraindítása a NAS-on éles környezetben
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: varadinas
          username: github-user
          key: ${{ secrets.NAS_SSH_KEY }}
          script: |
            docker pull laxus0212/fridge-management-backend:${{ env.TAG_NAME }}
            echo \"IMAGE_VERSION=${{ env.TAG_NAME }}\" > /volume1/docker/fridge-management-backend/.env
            docker-compose -f /volume1/docker/fridge-management-backend/docker-compose.prod.yml up -d
          

  build-database:
    runs-on: self-hosted
    if: contains(github.ref, '-DATABASE')
    steps:
      - name: Repository klónozása
        uses: actions/checkout@v3

      - name: Adatbázis Docker image építése
        run: docker build -t laxus0212/fridge-management-database:${{ env.TAG_NAME }} -f Dockerfile_db .
        env:
          DOCKER_BUILDKIT: 1

      - name: Adatbázis Docker image push
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin docker.io
          docker push laxus0212/fridge-management-database:${{ env.TAG_NAME }}

  deploy_database:
    runs-on: self-hosted
    needs: build-database
    if: contains(github.ref, '-DATABASE')
    steps:
      - name: Adatbázis konténer újraindítása a NAS-on és várakozás az elérhetőségre
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: varadinas
          username: github-user
          key: ${{ secrets.NAS_SSH_KEY }}
          script: |
            docker pull laxus0212/fridge-management-database:${{ env.TAG_NAME }}
            docker-compose -f /volume1/docker/fridge-management-backend/docker-compose.database.yml up -d
            echo 'Várakozás az adatbázis elérhetőségére...'
            while [ $(docker inspect --format='{{json .State.Health.Status}}' my_mariadb) != '\"healthy\"' ]; do
              sleep 10
            done
            echo 'Az adatbázis elérhető.'
            docker-compose -f /volume1/docker/fridge-management-backend/docker-compose.prod.yml up -d
            docker-compose -f /volume1/docker/fridge-management-backend/docker-compose.dev.yml up -d
